name: Build Status
on:
  push:
    branches:
      - master
      - release/*

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out source code
        uses: actions/checkout@v1
      
      - name: Test
        env:
          GOPROXY: "https://proxy.golang.org"
        run: go test ./...

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out source code
        uses: actions/checkout@v1
      
      - name: Get Built Information
        shell: bash
        id: built
        run: |
          echo "##[set-output name=commit;]$(git rev-parse --short HEAD)"
          echo "##[set-output name=version;]$(git describe --tags $(git rev-list --tags --max-count=1))"
          echo "##[set-output name=go_version;]$(go version | awk '{print $3}')"

      - name: Build Binaries
        shell: bash
        env:
          GOPROXY: "https://proxy.golang.org"
          COMMIT: ${{steps.built.outputs.commit}}
          VERSION: ${{steps.built.outputs.version}}
          GOVERSION: ${{steps.built.outputs.go_version}}
        run: bash ./ci/build-linux.sh && rm ./bin/.gitkeep
      
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: elk-linux
          path: ./bin/
  
  build-mac:
    name: Build Mac
    runs-on: macos-latest
    needs: test
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out source code
        uses: actions/checkout@v1
      
      - name: Get Built Information
        shell: bash
        id: built
        run: |
          echo "##[set-output name=commit;]$(git rev-parse --short HEAD)"
          echo "##[set-output name=version;]$(git describe --tags $(git rev-list --tags --max-count=1))"
          echo "##[set-output name=go_version;]$(go version | awk '{print $3}')"

      - name: Build Binaries
        shell: bash
        env:
          GOPROXY: "https://proxy.golang.org"
          COMMIT: ${{steps.built.outputs.commit}}
          VERSION: ${{steps.built.outputs.version}}
          GOVERSION: ${{steps.built.outputs.go_version}}
        run: bash ./ci/build-mac.sh && rm ./bin/.gitkeep
      
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: elk-mac
          path: ./bin/
  
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    needs: test
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out source code
        uses: actions/checkout@v1
      
      - name: Get Built Information
        shell: bash
        id: built
        run: |
          echo "##[set-output name=commit;]$(git rev-parse --short HEAD)"
          echo "##[set-output name=version;]$(git describe --tags $(git rev-list --tags --max-count=1))"
          echo "##[set-output name=go_version;]$((go version).Split(' ') | select -index 2)"
      
      - name: Get Go Version
        shell: powershell
        id: go
        run: echo "$((go version).Split(' ') | select -index 2)"

      - name: Build Binaries
        shell: powershell
        env:
          GOPROXY: "https://proxy.golang.org"
          COMMIT: ${{steps.built.outputs.commit}}
          VERSION: ${{steps.built.outputs.version}}
          GOVERSION: ${{steps.go.outputs}}
        run: .\ci\build-windows
      
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: elk-windows
          path: ./bin/